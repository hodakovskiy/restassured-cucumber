pipeline {
  agent any
  stages {
    stage('Test') {
      steps {
        sh 'mvn -v'
      }
      steps {
        sh 'mvn clean install'
      }
   
      post {
        always {
         
          cucumber '**/*.json'
        }
        success {
            echo 'This will run only if successful'
            slackSend channel: 'apitest', color: '#439FE0", message: "Build Started: ${env.JOB_NAME} ${env.BUILD_NUMBER}', message: 'successful ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)', tokenCredentialId: 'jenkins-slack-notifier'
        }
        failure {
            echo 'This will run only if failed'
            slackSend channel: 'apitest', color: '#439FE0", message: "Build Started: ${env.JOB_NAME} ${env.BUILD_NUMBER}', message: 'failure ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)', tokenCredentialId: 'jenkins-slack-notifier'
     
        }
        unstable {
            echo 'This will run only if the run was marked as unstable'
            slackSend channel: 'apitest', color: '#439FE0", message: "Build Started: ${env.JOB_NAME} ${env.BUILD_NUMBER}', message: 'unstable ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)', tokenCredentialId: 'jenkins-slack-notifier'
   
        }
        changed {
            echo 'This will run only if the state of the Pipeline has changed'
            echo 'For example, if the Pipeline was previously failing but is now successful'
            slackSend channel: 'apitest', color: '#439FE0", message: "Build Started: ${env.JOB_NAME} ${env.BUILD_NUMBER}', message: 'changed ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)', tokenCredentialId: 'jenkins-slack-notifier'

        }

      }
    }
  }
}